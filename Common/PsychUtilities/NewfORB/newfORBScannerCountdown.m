function forb=newfORBScannerCountdown(window, forb, skip, nslices, background, txtcol)quitkey=KbName('esc');modifierkey=KbName('apple');fontsize=24;textxpos=fontsize;textypos=fontsize+10;font='Courier';oldfont=SCREEN(window,'TextFont',font);oldfontsize=SCREEN(window,'TextSize',fontsize);if 1	proceedafterloadingtext='Druk op spatiebalk na laden';	waitingforscannertext='Wacht op scanner';	startsafternextscantext='Begint bij de volgende scan';	waitingforscanstext='Wacht nog op';else	proceedafterloadingtext='Press spacebar when loaded';	waitingforscannertext='Waiting for scanner';	startsafternextscantext='Proceeds upon next scan';	waitingforscanstext='Waiting for another';endwhite=WhiteIndex(window); % always use white textblack=BlackIndex(window);if nargin<=4 | isempty(background)	background=(white+black)/2; % set background to middle gray when unknownendif nargin<=5 | isempty(txtcol)	txtcol=white;endrect=SCREEN(window, 'rect');rect(3)=rect(3)/2-5; rect(4)=textypos+fontsize; SCREEN(window,'FillRect',background, rect);% wait for space bar press to continue after scanner loadingSCREEN(window,'DrawText', proceedafterloadingtext, textxpos, textypos, txtcol);waitForSpaceBar;if forb.scanner.simulate==1 & forb.scanner.start < 0 % to start simulation	forb.scanner.start=getsecs;endSCREEN( window, 'FillRect', background, rect);if skip > 0			% remove any pending trigger pulses (or key presses) by closing (and later re-opening port)	newforbclose(forb);			forb=newforbopen( forb ); % open the port for receiving responses		updatescreen=0;	triggercount=0;	volumecount=0;	triggerlogged=0;		% wait for scanner to generate first trigger	SCREEN(window,'DrawText', waitingforscannertext, textxpos, textypos, txtcol);	while 1		[keyIsDown,secs,keyCode] = KbCheck;		if keyCode(modifierkey) & keyCode(quitkey)			break;		end			[isbuttondown, istrigger, time, forb]=newforbcheck(forb);			% tel aantal triggers		if istrigger==1			if triggerlogged==0				triggercount=triggercount+forb.status(forb.trigger);				if triggercount>= nslices					volumecount=volumecount+1;					triggercount=mod(triggercount,nslices);				end				triggerlogged=1;				updatescreen=1;			end		else			triggerlogged=0;		end				% onderbreek wanneer aantal volumes/triggers gehaald is (dus eerste trigger van volume dat niet geskipped moet worden		if volumecount==skip & triggercount==1			break;		end				if updatescreen==1			SCREEN( window, 'FillRect', background, rect);			if volumecount==skip				txt=startsafternextscantext;			else				txt=sprintf('%3d volumes, %4d triggers', skip-volumecount, nslices-triggercount);			end			SCREEN(window,'DrawText', txt, textxpos, textypos, txtcol);			updatescreen=0;		end	end	endSCREEN( window, 'FillRect', background, rect);