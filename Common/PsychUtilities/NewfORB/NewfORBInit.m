function forb=NewfORBInit( portid, keyset, usekeys )%% Initialize fORB% USAGE: forb=NewfORBInit( mode, keyboardset, scanner )% portid (0=do not use fORB (keys only), 1=modem portid, 2 = printer portid)% keyboardset (0= do not allow keyboard, 1=use function keys, 2 = use arrowkeys)% scanner (1=use actual scanner, 0=simulate)% forbinit returns structure with all settings and should be passed to% other functions such as forbcheck and forbopen% 	history:% 12-07-2000  fwc 	wrote it, partly based on my c-code% 15/7/2000	  fwc	made opening the port a separate function (fORBOpen)%					to allow fast opening and closing as a means%					to ignore pending triggers. Actual mode is returned% 27-03-2000	fwc kleine veranderingetjes% 04-01-2002	fwc	Now using structure and eliminated use of globals% 18-01-02		fwc removed usetrigger, defaults to simulation on in case portid=0% defaults for scanner simulationTR=3.090;nslices=26;forb=[];forb.error=0;forb.time=getsecs;forb.usekeys=usekeys;forb.portid=portid;forb.timeoutMs=2;forb.nbytes=0;forb.timeoutSecs=forb.timeoutMs/1000;forb.port=-1; % actual port that will be assigned by serial driverforb.buttonkey=[];forb.print = 1;	% 1 to print set up info and error messages, 0=notif forb.portid==0 	simulate=1;	% assume we want to simulate scannerelse	simulate=0;endforb=NewfORBInitScanner(forb, simulate, TR, nslices); % set some defaults for thisforb=newforbopen(forb);if forb.mode ~=0 & forb.port <= 0	if forb.print==1		fprintf('\nForbopen failed to open serial portid (portid: %d).\n', forb.portid );	end	forb.usekeys = 1; % can not use fORB, use keys and simulate trigger	forb.error=1;end% do not change this numberingforb.blue=1;forb.yellow=2;forb.green=3;forb.red=4;forb.nbuttons=4;forb.trigger=5;switch keyset	case 2, % arrow keys		forb.buttonkey(forb.blue)=KbName('up');		forb.buttonkey(forb.yellow)=KbName('down');		forb.buttonkey(forb.green)=KbName('left');		forb.buttonkey(forb.red)=KbName('right');		forb.buttonkey(forb.trigger)=KbName('t');	otherwise, % function keys		forb.buttonkey(forb.blue)=KbName('f1');		forb.buttonkey(forb.yellow)=KbName('f2');		forb.buttonkey(forb.green)=KbName('f3');		forb.buttonkey(forb.red)=KbName('f4');		forb.buttonkey(forb.trigger)=KbName('f5');	end	if forb.print==1	fprintf('\n fORB Key codes set.\n');end% set bit values to testforb.bit=[];forb.nbits=5;for i=1:forb.nbits	forb.bit(i)=2^(i-1);	forb.status(i)=0;endforb.prevstatus=forb.status;% make sure we have used these functionsnewforbclose(forb);forb=newforbopen(forb);[buttonisdown, trigger, time, forb ]=NewfORBCheck(forb);	if forb.print==1 % print status info	if forb.mode==0		fprintf('Using forb keys only.\n');	elseif forb.mode==1		fprintf('Using modem port.\n');		if forb.usekeys == 1			fprintf('Forb keys can also be used.\n\n');		end	elseif forb.mode==2		fprintf('Using printer port.\n');		if forb.usekeys == 1			fprintf('Forb keys can also be used.\n\n');		end	endend		