function dac=lumToDac( lums, lut ) % 	find dac value for gun type 'gun' that provides certain luminance% 	'gun' can be red, green, blue or gray (1, 2, 3, 4)% 	history%	8/7/2000	FWC	converted from C%	9/2/2001	fwc	removed bug, forgot to convert from array index to dac value by subtracting 1%   050204      fwc version for new colour routines, lut is organized as dacxguns%   200305      fwc fixed bug in using it with luminance (gun 4) only.channel={'red', 'green', 'blue', 'gray', 'unknown', 'unknown'};err_lum=0.01; % allowable error in luminancehigh = 0;middle = 0;lowdac = 1;dac = -1; % error value[highdac, nluts] = size(lut);% if gun>nluts% 	fprintf( '\nnewLumToDac err: no lut for ''%s'' channel.\n', channel{gun} );% 	return;% end%size(lums)if size(lums,2)==1	myguns=4;elseif size(lums,2)==3	myguns=[1 2 3];else	fprintf('newLumToDac2: second dim of ''lums'' should be 1 or 3 (=%d)\n', size(lums,2));		returnend						dac=zeros(size(lums));% size(dac)% length(myguns)for i=1:size(lums,1)%	for gun=myguns;	for j=1:length(myguns);		gun=myguns(j);		lum=lums(i,j);		if lum > (lut(highdac, gun)+err_lum)			% fprintf( '\nnewLumToDac2 err: %f cd/m2 too high for ''%s'' channel (max=%f).\n', lum, channel{gun}, lut(highdac, gun) );			break		end			if lum < (lut(lowdac, gun)-err_lum)			% fprintf( '\nnewLumToDac2 err: %f cd/m2 too low for ''%s'' channel (min=%f).\n', lum, channel{gun}, lut(lowdac, gun) );			break		end			high = highdac;		low = lowdac;		while high - low > 1			middle = round((high+low)/2);			if lum > lut(round(middle), gun)				low  = middle;			else				high = middle;			end		end			if lum > (lut(high,gun) + lut(low, gun))/2			dac(i,j) = high;		else			dac(i,j) = low;		end	endenddac=dac-1; % convert from array index to dac value